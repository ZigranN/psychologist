import { useState } from "react";
import styles from "./Appointment.module.css";

const Appointment = () => {
    const [formData, setFormData] = useState({
        name: "",
        contact: "",
    });
    const [statusMessage, setStatusMessage] = useState("");

    const sendMessageToTelegram = async (message) => {
        const CHAT_ID = '1775514253';
        const TELEGRAM_API_URL = `https://api.telegram.org/bot7720061220:AAELg2CYYaiRjciv3byBU9PlsbQhNreVw/sendMessage`;

        try {
            const response = await fetch(TELEGRAM_API_URL, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    chat_id: CHAT_ID,
                    text: message,
                    parse_mode: 'HTML',
                }),
            });

            if (!response.ok) {
                new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.");
            }

            console.log("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞:", error);
            throw error;
        }
    };

    const validateForm = () => {
        const { name, contact } = formData;

        if (!name.trim()) {
            setStatusMessage("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.");
            return false;
        }

        if (!contact.trim()) {
            setStatusMessage("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω.");
            return false;
        }

        if (!/^[\d\s+()-]+$/.test(contact)) {
            setStatusMessage("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.");
            return false;
        }

        return true;
    };

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({
            ...prevData,
            [name]: value,
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        if (!validateForm()) {
            return;
        }

        const { name, contact } = formData;

        const message = `
üìå <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É:</b>
- üôã <b>–ò–º—è:</b> ${name}
- üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${contact}
- ‚è≥ <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> 30 –º–∏–Ω—É—Ç
- üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 1500 —Å–æ–º
        `;

        try {
            await sendMessageToTelegram(message);
            setStatusMessage("–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
            setFormData({
                name: "",
                contact: "",
            });
        } catch {
            setStatusMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    };

    return (
        <section className={styles.appointment}>
            <div className={styles.container}>
                <div className={styles.image}>
                    <img src="/psychologist/images/4.jpg" alt="–°–∞–ª—Ç–∞–Ω–∞—Ç" />
                </div>
                <div className={styles.form}>
                    <h2 className={styles.title}>–ó–ê–ü–ò–®–ò–¢–ï–°–¨ –ù–ê –û–ó–ù–ê–ö–û–ú–ò–¢–ï–õ–¨–ù–£–Æ –í–°–¢–†–ï–ß–£</h2>
                    <p>–≥–¥–µ –í—ã —É–∑–Ω–∞–µ—Ç–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –º–æ–π –ø–æ–¥—Ö–æ–¥</p>
                    <p className={styles.description}>
                        –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 30 –º–∏–Ω—É—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å 1500 —Å–æ–º
                    </p>

                    {statusMessage && (
                        <div className={styles.statusMessage}>
                            <p>{statusMessage}</p>
                        </div>
                    )}

                    <form onSubmit={handleSubmit}>
                        <input
                            type="text"
                            name="name"
                            placeholder="–í–∞—à–µ –∏–º—è"
                            className={styles.input}
                            value={formData.name}
                            onChange={handleChange}
                        />
                        <input
                            type="tel"
                            name="contact"
                            placeholder="(+996) 555 922289"
                            className={styles.input}
                            value={formData.contact}
                            onChange={handleChange}
                        />
                        <button type="submit" className={styles.button}>
                            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                        </button>
                    </form>
                </div>
            </div>
        </section>
    );
};

export default Appointment;
